name: Deploy Clogged App

on:
  push:
    branches:
      - main     # Trigger on push to main (for production)
      - staging  # Trigger on push to staging

jobs:
  deploy:
    name: Deploy to ${{ github.ref_name == 'main' && 'Production' || 'Staging' }}
    runs-on: ubuntu-latest

    # Select the GitHub Environment based on the branch triggering the workflow
    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

    steps:
      - name: Setup DigitalOcean firewall
        if: github.ref_name == 'staging'
        uses: earthpyy/setup-digitalocean-firewall@v1.0.1
        with:
          access-token: ${{ secrets.DO_ACCESS_TOKEN }}
          firewall-id: ${{ secrets.DO_FIREWALL_ID }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.2
        with:
          # These secrets are now automatically sourced from the selected GitHub Environment
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Pass environment-specific info and branch name to the deploy script
          script: |
            export DEPLOY_BRANCH=${{ github.ref_name }}
            export COMPOSE_FILE_NAME=${{ vars.COMPOSE_FILE_NAME }}
            export APP_DEPLOY_PATH=${{ vars.DEPLOY_PATH }}
            export B2_BUCKET_NAME=${{ vars.B2_BUCKET_NAME }}
            export B2_ENDPOINT=${{ vars.B2_ENDPOINT }}
            export B2_REGION=${{ vars.B2_REGION }}
            
            export B2_ACCESS_KEY_ID=${{ secrets.B2_ACCESS_KEY_ID }}
            export B2_SECRET_ACCESS_KEY=${{ secrets.B2_SECRET_ACCESS_KEY }}
            export GF_SECURITY_ADMIN_USER=${{ secrets.GF_SECURITY_ADMIN_USER }}
            export GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}
            export GF_SERVER_ROOT_URL=${{ secrets.GF_SERVER_ROOT_URL }}
            export ACME_EMAIL=${{ secrets.ACME_EMAIL }}
            export APP_DB_USER=${{ secrets.APP_DB_USER }}
            export APP_DB_PASSWORD=${{ secrets.APP_DB_PASSWORD }}
            
            echo "Executing deployment script on $host for branch $DEPLOY_BRANCH"
            cd $APP_DEPLOY_PATH
            ./deploy.sh # Execute the deployment script