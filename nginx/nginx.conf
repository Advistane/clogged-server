# ./nginx/nginx.conf

# Optional top-level directives (usually set by the base Nginx image)
# user nginx;
# worker_processes auto;
# error_log /var/log/nginx/error.log warn;
# pid /var/run/nginx.pid;

events {
    worker_connections 1024; # Example value
}

# The http block contains upstream, server, and location directives
http {
    # === Upstream definitions MUST be inside the http block ===
    upstream backend {
        # The server service, listening on port 5000 inside the Docker network
        server server:5000;
    }

    upstream frontend {
        # The client service, listening on port 80 (Nginx) inside the Docker network
        server client:80;
    }
    # =========================================================

    # Optional: Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Optional: Logging format
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    # Optional: Access log location
    access_log /var/log/nginx/access.log; # Ensure this path is writable or use volume mount

    # Optional: Performance settings
    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;

    # Your server block(s) also go inside the http block
    server {
        listen 80;
        server_name clogged.me www.clogged.me localhost; # Adjust domain names

        # Add security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        client_max_body_size 20M;

        # Error logging for this server block (can be same as global)
        error_log /var/log/nginx/error.log;

        location /api {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Optional: Include other configurations if needed
    # include /etc/nginx/conf.d/*.conf;
}